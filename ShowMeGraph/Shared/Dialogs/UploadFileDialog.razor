<MudDialog>
    <DialogContent>
        <MudFileUpload @bind-Files="File" OnFilesChanged="OnInputFileChanged" Hidden="false" Class="flex-1" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0"
        @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
            <ButtonTemplate>
                <MudPaper Width="25vw" Height="25vh" Outlined="true" Class="@_dragClass">
                    @if (_fileName is not null)
                    {
                        <MudText Typo="Typo.h6">@_fileName</MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.body1">Drag and drop files here</MudText>
                    }
                </MudPaper>
            </ButtonTemplate>
        </MudFileUpload>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private static string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string _dragClass = DefaultDragClass;
    private string? _fileName;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    public IBrowserFile? File { get; private set; }

    private void Submit() => MudDialog.Close(DialogResult.Ok(File));

    private void Cancel() => MudDialog.Cancel();

    private void SetDragClass()
    {
        _dragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        _dragClass = DefaultDragClass;
    }

    private void OnInputFileChanged(InputFileChangeEventArgs e)
    {
        ClearDragClass();
        _fileName = e.File.Name;
    }
}

